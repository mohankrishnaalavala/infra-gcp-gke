# NOTE: Enable WIF and set GitHub environment variables after first manual apply
# This workflow is for Terraform plan only - apply should be done manually for infrastructure changes

name: Terraform Plan

on:
  pull_request:
    paths:
      - 'envs/**'
      - 'modules/**'
      - '.github/workflows/tf-plan.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to plan'
        required: true
        default: 'hackathon'
        type: choice
        options:
          - hackathon

env:
  TF_VERSION: '1.6.0'
  ENVIRONMENT: ${{ github.event.inputs.environment || 'hackathon' }}

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    
    # TODO: Set these environment variables in GitHub repository settings after first manual apply:
    # WIF_PROVIDER: //iam.googleapis.com/projects/PROJECT_NUMBER/locations/global/workloadIdentityPools/github-actions/providers/github-oidc
    # WIF_SERVICE_ACCOUNT: ci-deployer@fraudguard-hackathon.iam.gserviceaccount.com
    # PROJECT_ID: fraudguard-hackathon
    
    permissions:
      contents: read
      id-token: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      # TODO: Uncomment after first manual apply and WIF setup
      # - name: Authenticate to Google Cloud
      #   uses: google-github-actions/auth@v2
      #   with:
      #     workload_identity_provider: ${{ vars.WIF_PROVIDER }}
      #     service_account: ${{ vars.WIF_SERVICE_ACCOUNT }}

      # - name: Setup gcloud CLI
      #   uses: google-github-actions/setup-gcloud@v2

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Terraform Init
        id: init
        working-directory: envs/${{ env.ENVIRONMENT }}
        run: terraform init

      - name: Terraform Validate
        id: validate
        working-directory: envs/${{ env.ENVIRONMENT }}
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: envs/${{ env.ENVIRONMENT }}
        run: |
          terraform plan -no-color -out=tfplan
          terraform show -no-color tfplan > plan.txt
        continue-on-error: true

      - name: Comment PR with Plan
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Read the plan output
            const planPath = path.join('envs', '${{ env.ENVIRONMENT }}', 'plan.txt');
            let plan = '';
            try {
              plan = fs.readFileSync(planPath, 'utf8');
            } catch (error) {
              plan = 'Could not read plan output';
            }
            
            // Truncate plan if too long
            const maxLength = 60000;
            if (plan.length > maxLength) {
              plan = plan.substring(0, maxLength) + '\n\n... (truncated)';
            }
            
            const output = `
            ## Terraform Plan Results for \`${{ env.ENVIRONMENT }}\`
            
            #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`terraform
            ${plan}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

      - name: Upload Plan Artifact
        if: steps.plan.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-${{ env.ENVIRONMENT }}
          path: envs/${{ env.ENVIRONMENT }}/tfplan
          retention-days: 30

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
